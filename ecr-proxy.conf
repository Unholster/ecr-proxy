lua_shared_dict ecr_proxy 128k;

server {
    # error_log stderr debug;
    listen 3333;
    location / {
        rewrite_by_lua_block {
            local shared = ngx.shared.ecr_proxy
            if err then
                ngx.log(ngx.WARN, 'Redis connection error')
            end

            local token, flags = shared:get('token')
            if token then
                ngx.log(ngx.DEBUG, 'Cached token found')
            else
                ngx.log(ngx.DEBUG, 'No token')
                local handle = assert(io.popen('aws ecr get-authorization-token --output text --query authorizationData[].authorizationToken'))
                token = assert(handle:read())
                handle:close()
                local expire = tonumber(os.getenv('ECR_TOKEN_EXPIRE'))
                local succ, err, forcible = shared:set('token', token, expire)
                if not succ then
                    ngx.log(ngx.WARN, err)
                end
            end
            ngx.req.set_header('Authorization', 'Basic ' .. token)
        }
        proxy_pass REGISTRY_URL;
    }
}
